<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="style.css">
<title>Введение в "Конструктор блок-схем"</title>
</head>

<body topmargin="0" leftmargin="0" bgcolor="#E0E0E0">
<div align="center">
  <center>

<table width="100%"  bgcolor="#E0E0E0"  bordercolorlight="#A0A0A0" border="1" bordercolordark="#FFFFFF">
<tr>
<td>  
<table width="100%">
<tr>
<td>
  <a href="index.htm">Введение</a> |
  <a href="sch.htm">Блок-схемы</a> |
  <a href="operat.htm">Блоки</a> |
  <a href="interp.htm">Операторы и выражения</a> |
  <a href="program.htm">Среда</a> |
  <a href="example.htm">Примеры</a> |
  <a href="online.htm">Online</a></td>
</td>
</tr>
</table>
</td>
</tr>
</table>

  </center>
</div>
<table cellpadding="10" width="100%" bgcolor="#FFFFFF">
<tr>
<td>
<h2>Свойство массовости и результативности
алгоритма&nbsp;</h2>
<p>Как говорилось выше, конструирование алгоритма сводится к поиску способа вычисления некоторого функционального преобразования, которое отражает существо прикладной задачи. По сути дела, это сводится к представлению сложного преобразования данных в виде композиции элементарных преобразований, каждое из которых может выполнить исполнитель алгоритма.&nbsp;<p>
Естественно, что эту проблему не имеет смысла решать для одного единственного набора исходных данных. Поэтому, для каждого алгоритма должна четко определяться область допустимых наборов данных, т.е. таких данных к которым применим этот алгоритм. (Очевидно, что эта область совпадает с областью определения функционального преобразования). Говорят, что алгоритм обладает свойством массовости, подразумевая под этим, что он правильно преобразует любой набор исходных данных из области допустимых.<p>
<b>
Примечание.</b> <i> При конструировании алгоритма одна из основных проблем - обеспечить правильную обработку любого допустимого набора данных. При реализации алгоритма в виде программы основная проблема - проконтролировать допустимость предлагаемого программе исходного набора данных. В результате должна получиться программа с полной "защитой от дурака", которая дает осмысленный ответ на любую комбинацию введенных в нее символов.</i><p>
Еще одно свойство, которое мы затронем - результативность алгоритма. Это подразумевает, что при любом допустимом исходном наборе данных алгоритм кончает свою работу за конечное число шагов. Естественно, что ценность имеют лишь такие алгоритмы.<p>
<b>
Примечание.</b> <i> Безрезультативность алгоритма не следует путать с зацикливанием программы, которое может возникать в случае некорректной реализации результативного алгоритма. Более того, не следует успокаиваться, если программа кончает свою работу за конечное число шагов. Вполне возможно, что вместо решения системы алгебраических уравнений она вычисляет фазы луны во времена фараона Рамсеса
II.</i><p>
</p>
</td>
</tr>
</table>
<div align="center">
  <center>

<table width="100%"  bgcolor="#E0E0E0"  bordercolorlight="#A0A0A0" border="1" bordercolordark="#F0F0F0">
<tr>
<td>  
<table width="100%">
<tr>
<td>(C) С.Г. Кузин, Р.О. Митин, И.С. Скрибловский</td>
</tr>
</table>
</td>
</tr>
</table>

  </center>
</div>

</body>

</html>
