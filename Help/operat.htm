<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="style.css">
<title>Введение в "Конструктор блок-схем"</title>
</head>

<body topmargin="0" leftmargin="0" bgcolor="#E0E0E0">
<div align="center">
  <center>

<table width="100%"  bgcolor="#E0E0E0"  bordercolorlight="#A0A0A0" border="1" bordercolordark="#FFFFFF">
<tr>
<td>  
<table width="100%">
<tr>
  <td>
    <a href="index.htm">Введение</a> |
    <a href="sch.htm">Блок-схемы</a> |
    <a href="operat.htm">Блоки</a> |
    <a href="interp.htm">Операторы и выражения</a> |
    <a href="program.htm">Среда</a> |
    <a href="example.htm">Примеры</a> |
    <a href="online.htm">Online</a></td>
  </td>
  </tr>
</table>
</td>
</tr>
</table>

  </center>
</div>
<table cellpadding="10" width="100%" bgcolor="#FFFFFF">
<tr>
<td>
<h2>Запись операторов в блоках&nbsp;</h2>
<h3>Блок ввода-вывода
</h3>
<p align="left">Для ввода используется оператор
вида <code>?&lt;имя переменной&gt;</code>
</p>
<p align="left">Пример: <code>?a</code>. В результате интерпретатор запросит у пользователя значение переменной а при переходе через блок. Блок ввода должен содержать ввод одной и только одной переменной.</p>
<p align="center"><img border="0" src="images/io.jpg" width="96" height="214"></p>
<p>Блок ввода также может запрашивать ввод значения для элемента массива: <code>?array[index]</code></p>
<p>Оператор вывода имеет более сложную структуру и позволяет выводить как значения переменной так и строковые константы. Все они должны быть перечислены через запятую. Так например оператор
<code>
  'A=',a,', B=',b,';'
</code>
выведет на экран <code>A=25, B=17;</code> если в переменных <code>a</code> и <code>b</code> находятся значения 25 и 17.
</p>

<h3>Блок действия</h3>
<p>Чаще всего действие — это присваивание значение переменной</p>
<p>Формат: <code>&lt;имя переменной&gt;:=&lt;выражение&gt;;</code></p>
<p align="center"><img border="0" src="images/assign.jpg"></p>
<p>В одном блоке может быть записано несколько операторов. Так на примере выше если пользователь введет чила 5 и 6 на экране в результате работы будет напечатано <code>A=11, B=77;</code></p>
<p>В некоторых случаях в блоке действия можно указать просто выражение без присваивание, если нет необходимости сохранять результат. Это полезно для объявлений массивов, файловых функций и так далее.</p>

<h3>Условный оператор</h3>
<p>Условный оператор проверяет истинность выражения и в зависимости от результата направляет дальнейшее выполнение блок-схемы по той или иной ветке.</p>
<p align="center"><img border="0" src="images/max.jpg"></p>
<p>
  Если пользователь введет 4 и 9, то программа выдаст результат: <code>Максимум из 4 и 9 = 9</code>
</p>

<h3>Вызов подпрограммы</h3>
<p>В блоке вызова нужно указать имя файла с вызываемой подпрограммой (без расширения .bsh).
</p>
<p align="center"><img border="0" src="images/call.jpg">
</p>
<p align="left">Так, если мы предыдущую программу сохранили в файл максимум.bsh, то команда <b>максимум</b> вызовет на выполнение сохраненную подпрограмму.</p>

<h3>Список глобальных переменных</h3>
<p>Список глобальных переменных используется тогда, когда подпрограммам нужно обмениваться информацией. Если переменная не объявлена в списке глобальных переменных то её область видимости будет лишь внутри данной блок-схемы. И две переменные в разных блок-схемах с одним и тем же именем будут разными переменным. Если же в схеме, из которой осуществляется вызов, присутствует блок со списком глобальных переменных содержащим нашу переменную, то она будет общей для всех блок-схем.</p>
<p>Так, если составим подпрограмму вычисления максимума следующим образом:</p>
<p align="center"><img border="0" src="images/fullmax.png"></p>
<p align="left">А в подпрограмму вызова внесем добавим блок с глобальными переменными:</p>
<p align="center"><img border="0" src="images/global.png"></p>
<p align="left">То по окончании работы будет выведено значение максимума. Без блока списка глобальных переменных, был бы выведен ноль, так как переменная <code>max</code> осталась бы пустой в контексте вызывающей программы.</p>

<h3>Блок инициализации</h3>
<p>Блок инициализации используется для сокращения записи. Также рекомендуется использовать его для объявления массивов.</p>

<h3>Начало / конец</h3>
<p>По стандарту блок-схема должна начинаться и заканчиваться этим блоком. На практике в Конструкторе Блок-схем они не обязательны, но рекомендуются для упрощения восприятия программ.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</td>
</tr>
</table>
<div align="center">
  <center>

<table width="100%"  bgcolor="#E0E0E0"  bordercolorlight="#A0A0A0" border="1" bordercolordark="#F0F0F0">
<tr>
<td>  
<table width="100%">
<tr>
<td>(C) С.Г. Кузин, Р.О. Митин, И.С. Скрибловский</td>
</tr>
</table>
</td>
</tr>
</table>

  </center>
</div>

</body>

</html>
